//参考文档
https://blog.csdn.net/qq_40709468/article/details/82316418

原型（Prototype）模式的定义如下：用一个已经创建的实例作为原型，
           通过复制该原型对象来创建一个和原型相同或相似的新对象。

原型模式
原型模式通常适用于以下场景。
对象之间相同或相似，即只是个别的几个属性不同的时候。
对象的创建过程比较麻烦，但复制比较简单的时候。

原型模式的优缺点
原型模式作为一种快速创建大量相同或相似的对象方式，在软件开发种的应用较为广泛，很多软件提供的CTRL+C和CTRL+V操作的就是原型模式的典型应用！

优点
当创建的对象实例较为复杂的时候，使用原型模式可以简化对象的创建过程！提高效率。
缺点
需要为每一个类配备一个克隆方法，而且该克隆方法位于一个类的里面，当对已有的类经行改造时需要修改源代码，违背了开闭原则。
在实现深克隆的时需要编写较为复杂的代码，而且当对象之间存在多重嵌套引用的时候，为了实现深克隆，每一层对象对应的类都必须支持深克隆，实现相对麻烦。

原型模式适用场景
在以下情况可以考虑使用。
1创建对象成本比较大，比如初始化要很长时间的，占用太多CPU的，
新对象可以通过复制已有的对象获得的，如果是相似的对象，则可以对其成员变量稍作修改。
2系统要保存对象状态的，而对象的状态改变很小。
3需要避免使用分层次的工厂类来创建分层次的对象，并且类的对象就只用一个或很少的组合状态！
