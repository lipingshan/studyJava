动态代理
动态代理类的源码是在程序运行期间由JVM根据反射等机制动态的生成，
所以不存在代理类的字节码文件。代理类和委托类的关系是在程序运行时确定。
目前java动态代理的实现分为两种

1.基于JDK的动态代理

2.基于CGILB的动态代理

在业务中使用动态代理，一般是为了给需要实现的方法添加预处理或者添加后续操作，
但是不干预实现类的正常业务，把一些基本业务和主要的业务逻辑分离。
我们一般所熟知的Spring的AOP原理就是基于动态代理实现的。

1.基于JDK的动态代理
基于JDK的动态代理就需要知道两个类：1.InvocationHandler（接口）、2.Proxy（类）
还要知道JDK是基于接口的动态代理,即需要被代理的类有一个接口。
所干涉道到的方法也是接口中规定的，由委托类实现的方法。至于委托类之外的方法则无法干涉。
